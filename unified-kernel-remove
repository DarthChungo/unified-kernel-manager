#!/bin/bash

#
# unified-kernel-remove
#
# Removes orphaned unified kernel images from a system's esp.
# Can be used with a pacman hook to remove leftover images
# when you uninstall a kernel to avoid orphaned efi images.
#

boot_dir=/boot # Directory containing boot files
esp_dir=/efi # Mountpoint of the efi system partition
esp_name=Linux # Name of the folder in which to save the unified images

if [ "$(id -u)" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

if [[ ! $1 == "hook" ]]; then
  echo "Removing orphaned unified kernel images"
fi

for unified_image in ${esp_dir}/EFI/${esp_name}/linux-*.efi; do
  kernel_name=$(basename $unified_image | sed 's/\.efi//')

  if [[ $kernel_name =~ "-fallback" ]]; then
    kernel_name=$(echo ${kernel_name} | sed 's/-fallback//')

    if [[ ! -f "${boot_dir}/initramfs-${kernel_name}-fallback.img" ]] || [[ ! -f "${boot_dir}/vmlinuz-${kernel_name}" ]]; then
      echo "  Removing orphaned unified image for kernel ${kernel_name}-fallback"
      rm ${unified_image}
    else
      echo "  Found kernel image and initramfs for ${kernel_name}-fallback"
    fi
  else
    if [[ ! -f "${boot_dir}/initramfs-${kernel_name}.img" ]] || [[ ! -f "${boot_dir}/vmlinuz-${kernel_name}" ]]; then
      echo "  Removing orphaned unified image for kernel ${kernel_name}"
      rm ${unified_image}
    else
      echo "  Found kernel image and initramfs for ${kernel_name}"
    fi
  fi
done

# vim: set filetype=sh
